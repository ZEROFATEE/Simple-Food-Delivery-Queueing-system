<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADIAAAAyCAYAAAAeP4ixAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAACxIAAAsSAdLdfvwAAASWSURBVGhD7Zh5yG1TGIcPIq7xcgnJWBSZJfOYDMl0iSjD
        P0iJzGMhEhkjMkYiUhL5T8i9/iAyZB5SMmae5+F51jlv377H3vus9Z3z6VP7V0/nvGu/e62191rrfdde
        vU6dOnXq1KnT7NF6cCm8CF/A7/AmHAv/Gx0BP8PfNfwFO8Gs0gKo62xwL9jpVWAO3A2WXwCzSm0P8jwM
        6xLwmr/ZegaGK2/DTk1Cq8GfYJ33wI4wD6Y9ItVO5jIpfQN19UvxGokbc1Tim6NXwPrugk8G/8WodQwU
        qaRzJb45egSsbytYHz4f2OdDsUo6V+KboxvA+vZLVq93AGibS7axoEQlnSvxzZGL2fqOS1Zf94NlBqEi
        lXSuxDdH54D1nZ6svoxcX4Pl+1uQq5LOhW8OhtYnYHlo0pmg7xnJmtKFYPlLsJgFOYqGcxS+JVwDTToN
        9KmOiFoRfgSv7WpBjqLBHIXvDslqlz76fpCsep0L+gw/iIqkeEeyMhSdy1H4Xgy7wJqwAqiVYA3YFo6G
        B0DfH6BJEbWOT9ai2hu8Zn5Z3II2jdrMjYvr5FRo0kOg377JWlTLwW/g9Y0taNNMPsg7YJJr07Og76bJ
        +reeA6+73R9Lm8BrYGW/gvPVxdc21PGWq7mhTkuC0849lYu7Tg+CdbmWpq29wIasyM6tC6O0FpiV3wc7
        2qbtwLpfT1a9Yg1dlaxpyC31L/AHnGhBps4GG875jgjfm5M1paXhSLgPPgN9nA1vwcPgSLt+RspIFDtR
        o0+JngTv2zpZ7TJZ6nt4svqJ7wSIzrfxMRwKjbKyp0Hnmywo0BLgKP4Eo7LxBuDaMOm5Psz+sROWV8Fs
        vxl43Y8tA4cvNgKU958EtToKdPoIlrGgQGuD9xocRulW0PdOsJ2nBva34FQelTdOBh/E9Vg7+m+DFfod
        PR8i2eXICOe9fiy1aQswP7j+NoTrwPu+hJwpGTIAeN+jyRrS8Pe7Dfq2XJibQ5tWB+/xbKrpjfpinDb6
        XQ8bgUnTh9oZhmV+OQWuhlvAfdtZYF5xbVmP07NWdvhKiIep8iHcBo5WXew3CepXt9FbFRaC151+y0KM
        hocPVR0Gb0C020Zb+O6dBzo5bHb6dogTj8D5OTxaLj6v+c3t56uh1Onjdj0+Y9+DdUC9DJbtnqx+wPBF
        RRtVXLeGdXNLJGmXwpbQKNeIjnsmayrmzxQxuleAtqcr7w7+V/G6Mllrv5CsFn0FOs5NVn/ea28PsT23
        IWO52xbtcXDtGARcK4607cQIVtu0TLnT1v4+WS36DnSMDOqwaluhWd//rhdlDtA2dJbKL0Dvdcv+2OD/
        taAm0qYn4zrulqxe73LQrnIZqD1Ae+Qw16huyh4EaiJtxtmrexu1FFixb8m3YoWWKQOCvhclq0xuLG8E
        p25sUB8HdwYTadNQ6bDp7FtrUnyqeurhSfo4Whk+BevzAZpU3OYhECHXfZAh0jUjDm28FX0OhEnIaeVi
        t143oEbNibR5MLQdNPtWJvUQoX1gRtr0wMzDBheW4c6IZp5xfo47nZpkeHUKGdXcgvwXbXbq1Gl2q9f7
        B/AENa4AmQ++AAAAAElFTkSuQmCC
</value>
  </data>
</root>